---
interface Image {
  src: string
  alt: string
}
interface Props {
  images: Image[]
}

const { images } = Astro.props
---

<div
  id="carouselCaptions"
  class="carousel carousel-dark slide relative"
  data-bs-ride="carousel"
>
  <div
    class="carousel-indicators absolute right-0 bottom-0 left-0 flex justify-center p-0 mb-4"
  >
    {
      images.map((_, index) => (
        <button
          type="button"
          data-bs-target="#carouselCaptions"
          data-bs-slide-to={index}
          class={index === 0 ? 'active' : ''}
          aria-current={index === 0}
          aria-label={`Slide ${index + 1}`}
        />
      ))
    }
  </div>
  <div class="carousel-inner relative w-full overflow-hidden">
    {
      images.map((img, index) => (
        <div
          class={`carousel-item relative float-left w-full ${
            index === 0 && 'active'
          }`}
        >
          <img src={img.src} class="block w-full" alt={img.alt} />
        </div>
      ))
    }
  </div>
  <button
    class="carousel-control-prev absolute top-0 bottom-0 flex items-center justify-center p-0 text-center border-0 hover:outline-none hover:no-underline focus:outline-none focus:no-underline left-0"
    type="button"
    data-bs-target="#carouselCaptions"
    data-bs-slide="prev"
  >
    <span
      class="carousel-control-prev-icon inline-block bg-no-repeat"
      aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button
    class="carousel-control-next absolute top-0 bottom-0 flex items-center justify-center p-0 text-center border-0 hover:outline-none hover:no-underline focus:outline-none focus:no-underline right-0"
    type="button"
    data-bs-target="#carouselCaptions"
    data-bs-slide="next"
  >
    <span
      class="carousel-control-next-icon inline-block bg-no-repeat"
      aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>
<script>
  import 'tw-elements'
</script>
